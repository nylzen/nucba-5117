.container {
  background: #282828;
  padding: 1rem;
  border-radius: 8px;
  margin: 20px 0;
  display: flex;
  gap: 10px;
}

.caja {
  width: 200px;
  height: 200px;
  background-color: greenyellow;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: black;
  font-weight: 700;
}

/* .translateX {
  transform: translateX(100px)
} */

/* Crear una animacion */
/* @keyframes nombreDeLaAnimacion {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
    background-color: blue;
  }
} */

@keyframes translateX {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(610px);
    background-color: crimson;
  }
}

.translateX {
  animation-name: translateX;
  animation-duration: 1s;
  /* animation-iteration-count: infinite; */
  /* animation-direction: alternate; */
  /* animation-timing-function: ease-in-out; */
}

.translateY {
  animation-name: translateY;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  /* animation: translateY 1s forwards; */
  opacity: 0;
}

@keyframes translateY {
  0% {
    transform: translateY(-20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0px);
  }
}

.translate {
  /* opacity: 0;
  animation-name: translate;
  animation-duration: 5s;
  animation-fill-mode: forwards; */
  transition: all 0.5s;
}

.translate:hover {
  transform: translate(20px, 20px);
}

@keyframes translate {
  0% {
    transform: translate(-100px, -20px);
    background-color: blue;
  }

  20% {
    background-color: red;
    transform: translate(50px, 50px);
  }

  90% {
    background-color: yellow;
    transform: translate(50px, 50px);
  }

  100% {
    background-color: orange;
    opacity: 1;
    transform: translate(0px);
  }
}

/* rotate */
.messi {
  width: 50%;
  display: block;
  border-radius: 8px;
  /* animation: rotate 1s infinite alternate; */
  /* opacity: 0; */
}

.rotate {
  /* background-color: red; */
  /* animation-name: rotate;
  animation-duration: 1s;
  animation-direction: alternate;
  animation-iteration-count: 2; */
  /* transform: rotate(45deg, 10deg, 20deg); */
  /* transform: rotateZ(15deg) */
  /* transform: rotateY(50deg) */
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(180deg);
  }
}

/* scale */
.scale {
  /* transform: translateX(500px); */
  /* translate: 200px;
  scale: 1.1; */
  /* transform: scale(1) */
  animation-name: scale;
  animation-duration: 0.5s;
  animation-timing-function: ease-out;
}

/* from desde to hasta === 0% {} 100% {} */

@keyframes scale {
  0% {
    transform: scale(0);
  }

  70% {
    transform: scale(1.1);
  }

  80% {
    transform: scale(0.9);
  }

  100% {
    transform: scale(1);
  }
}

/*
transform: translate (x,y), rotate(deg), scale(x,y)
Tambien pueden usar la propiedad por separado sin usar el transform
translate
rotate
scale
*/

.skew {
  /* transform: skewY(20deg); */
  animation: skew 1s;
}

@keyframes skew {
  from {
    transform: skew(0);
  }

  to {
    transform: skew(20deg);
  }
}

/* trnasiciones */
.transition-duration {
  transition-property: all;
  transition-duration: 1s;
}

.transition-duration:hover {
  background-color: coral;
  width: 100px;
  height: 100px;
}

.transition-timing {
  transition-property: all;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  /* transition-timing-function: cubic-bezier(0,.9,.89,.17); */
}

.transition-timing:hover {
  background-color: coral;
  width: 100px;
  height: 100px;
}

.transition-delay {
  transition-property: all;
  transition-duration: 1s;
  transition-delay: 0.3s;
}

.transition-delay:hover {
  background-color: coral;
  width: 100px;
  height: 100px;
}

.transition {
  transition: all 1s ease-in-out;
}
.transition:hover {
  background-color: coral;
  width: 100px;
  height: 100px;
}

/* ANIMACIONES */
@keyframes moverCaja {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(500px);
  }
}

.animada {
  animation-name: moverCaja;
  animation-duration: 2s;
}

.infinita {
  animation-iteration-count: infinite;
}

.alternada {
  animation-direction: alternate;
}

.delay {
  animation-delay: 2s;
}

.timing {
  animation-timing-function: linear;
}

.paused:hover {
  animation-play-state: paused;
}

.animation {
  /* La posicion de estos valores es como quieran, nombre animacion,
  1er valor en s va a ser siempre la duracion,
  2do valor en s siempre va a ser el delay
  */
  animation: moverCaja 2s 0.5s infinite alternate linear;
  /* animation:  2s moverCaja infinite alternate; */
}

.animation:hover {
  animation-play-state: paused;
}

.scroll-indicator {
  position: fixed;
  width: 100%;
  height: 8px;
  background-color: cornflowerblue;
  top: 0;
  left: 0;
  z-index: 2;
  scale: 0 1;
  transform-origin: left;
  animation-name: scrollIndicator;
  animation-timeline: scroll();
  animation-timing-function: linear;
}

@keyframes scrollIndicator {
  /* from {
    scale: 0 1;
  } */

  to {
    scale: 1 1;
  }
}
.post {
  margin: 20px 0;
  background-color: gray;
  padding: 2rem;
}

.post {
  translate: 0 180px;
  /* scale: 0 0; */
  opacity: 0;
  animation: fadeIn forwards;
  animation-timeline: view();
  /* start y end */
  animation-range:200px 500px;
}

@keyframes fadeIn {
  to {
    translate: 0 0;
    /* scale: 1 1; */
    opacity: 1;
  }
}
